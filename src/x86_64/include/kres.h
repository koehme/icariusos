/**
 * @file kres.h
 * @author Kevin Oehme
 * @copyright MIT
 */

#pragma once

#include "types.h"

typedef enum kstatus {
	K_OK = 0,
	// STANDARD ERRORS
	K_EPERM = 1,
	K_ENOENT = 2,
	K_ESRCH = 3,
	K_EINTR = 4,
	K_EIO = 5,
	K_ENXIO = 6,
	K_E2BIG = 7,
	K_ENOEXEC = 8,
	K_EBADF = 9,
	K_ECHILD = 10,
	K_EAGAIN = 11,
	K_ENOMEM = 12,
	K_EACCES = 13,
	K_EFAULT = 14,
	K_ENOTBLK = 15,
	K_EBUSY = 16,
	K_EEXIST = 17,
	K_EXDEV = 18,
	K_ENODEV = 19,
	K_ENOTDIR = 20,
	K_EISDIR = 21,
	K_EINVAL = 22,
	K_ENFILE = 23,
	K_EMFILE = 24,
	K_ENOTTY = 25,
	K_ETXTBSY = 26,
	K_EFBIG = 27,
	K_ENOSPC = 28,
	K_ESPIPE = 29,
	K_EROFS = 30,
	K_EMLINK = 31,
	K_EPIPE = 32,
	K_EDOM = 33,
	K_ERANGE = 34,
	K_EDEADLK = 35,
	K_ENAMETOOLONG = 36,
	K_ENOLCK = 37,
	K_ENOSYS = 38,
	K_ENOTEMPTY = 39,
	K_ELOOP = 40,
	// SYSV/XENIX/STREAMS
	K_EWOULDBLOCK = 41,
	K_ENOMSG = 42,
	K_EIDRM = 43,
	K_ECHRNG = 44,
	K_EL2NSYNC = 45,
	K_EL3HLT = 46,
	K_EL3RST = 47,
	K_ELNRNG = 48,
	K_EUNATCH = 49,
	K_ENOCSI = 50,
	K_EL2HLT = 51,
	K_EBADE = 52,
	K_EBADR = 53,
	K_EXFULL = 54,
	K_ENOANO = 55,
	K_EBADRQC = 56,
	K_EBADSLT = 57,
	K_EDEADLOCK = 58,
	K_EBFONT = 59,
	// STREAMS
	K_ENOSTR = 60,
	K_ENODATA = 61,
	K_ETIME = 62,
	K_ENOSR = 63,
	// NETWORK
	K_ENONET = 64,
	K_ENOPKG = 65,
	K_EREMOTE = 66,
	K_ENOLINK = 67,
	K_EADV = 68,
	K_ESRMNT = 69,
	K_ECOMM = 70,
	K_EPROTO = 71,
	K_EMULTIHOP = 72,
	K_EDOTDOT = 73,
	// FILE SYSTEMS
	K_EBADMSG = 74,
	K_EOVERFLOW = 75,
	K_ENOTUNIQ = 76,
	K_EBADFD = 77,
	K_EREMCHG = 78,
	K_ELIBACC = 79,
	K_ELIBBAD = 80,
	K_ELIBSCN = 81,
	K_ELIBMAX = 82,
	K_ELIBEXEC = 83,
	K_EILSEQ = 84,
	K_ERESTART = 85,
	K_ESTRPIPE = 86,
	// SOCKETS / NETWORK
	K_EUSERS = 87,
	K_ENOTSOCK = 88,
	K_EDESTADDRREQ = 89,
	K_EMSGSIZE = 90,
	K_EPROTOTYPE = 91,
	K_ENOPROTOOPT = 92,
	K_EPROTONOSUPPORT = 93,
	K_ESOCKTNOSUPPORT = 94,
	K_EOPNOTSUPP = 95,
	K_EPFNOSUPPORT = 96,
	K_EAFNOSUPPORT = 97,
	K_EADDRINUSE = 98,
	K_EADDRNOTAVAIL = 99,
	K_ENETDOWN = 100,
	K_ENETUNREACH = 101,
	K_ENETRESET = 102,
	K_ECONNABORTED = 103,
	K_ECONNRESET = 104,
	K_ENOBUFS = 105,
	K_EISCONN = 106,
	K_ENOTCONN = 107,
	K_ESHUTDOWN = 108,
	K_ETOOMANYREFS = 109,
	K_ETIMEDOUT = 110,
	K_ECONNREFUSED = 111,
	K_EHOSTDOWN = 112,
	K_EHOSTUNREACH = 113,
	K_EALREADY = 114,
	K_EINPROGRESS = 115,
	K_ESTALE = 116,
	K_EUCLEAN = 117,
	K_ENOTNAM = 118,
} kstatus_t;

typedef struct kresult {
	kstatus_t code;
	const ch* msg;
} kresult_t;

kresult_t kresult_ok(const ch* msg);
kresult_t kresult_err(kstatus_t c, const ch* msg);